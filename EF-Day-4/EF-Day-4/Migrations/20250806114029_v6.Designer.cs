// <auto-generated />
using EF_Day_4.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_Day_4.Migrations
{
    [DbContext(typeof(TestContext))]
    [Migration("20250806114029_v6")]
    partial class v6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_Day_4.Model.Department", b =>
                {
                    b.Property<int>("deptId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("loaction")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("deptId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            deptId = 1,
                            Name = "dontNet",
                            loaction = "lec1"
                        },
                        new
                        {
                            deptId = 2,
                            Name = "C#",
                            loaction = "lec2"
                        },
                        new
                        {
                            deptId = 3,
                            Name = "Front",
                            loaction = "lec3"
                        });
                });

            modelBuilder.Entity("EF_Day_4.Model.Employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("age")
                        .HasColumnType("int");

                    b.Property<int>("deptId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("salary")
                        .HasColumnType("money");

                    b.HasKey("id");

                    b.HasIndex("deptId");

                    b.ToTable("Employees", "hr");
                });

            modelBuilder.Entity("EF_Day_4.Model.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("duration")
                        .HasColumnType("int");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("EF_Day_4.Model.Test", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("age")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("salary")
                        .HasColumnType("money");

                    b.HasKey("id");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("EF_Day_4.Model.empProj", b =>
                {
                    b.Property<int>("empId")
                        .HasColumnType("int");

                    b.Property<int>("projId")
                        .HasColumnType("int");

                    b.HasKey("empId", "projId");

                    b.HasIndex("projId");

                    b.ToTable("EmpProjs");
                });

            modelBuilder.Entity("EF_Day_4.Model.Employee", b =>
                {
                    b.HasOne("EF_Day_4.Model.Department", "dept")
                        .WithMany("Employees")
                        .HasForeignKey("deptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dept");
                });

            modelBuilder.Entity("EF_Day_4.Model.empProj", b =>
                {
                    b.HasOne("EF_Day_4.Model.Employee", "employee")
                        .WithMany("Projects")
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_Day_4.Model.Project", "project")
                        .WithMany("Employees")
                        .HasForeignKey("projId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");

                    b.Navigation("project");
                });

            modelBuilder.Entity("EF_Day_4.Model.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EF_Day_4.Model.Employee", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("EF_Day_4.Model.Project", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
